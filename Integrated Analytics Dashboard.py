# -*- coding: utf-8 -*-
"""Copy of Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pSOpEqR796vtzsNMYDqVOcOGH9ztFW1y
"""

pip install dash pandas plotly

import dash
from dash import dcc, html
import pandas as pd
import plotly.express as px

# Sample data for Healthcare Analytics
data_health = {
    "Hospital": ["CMH FSD", "CMH SLK", "CMH LHR", "CMH GUJ", "CMH SWL", "CMH MLT", "CMH RWL", "CMH SRG"],
    "Patients": [1000, 2000, 1500, 3000, 2500, 1800, 2200, 4000],
    "Age_Group": ["0-18", "19-35", "36-50", "51-70", "70+", "19-35", "36-50", "51-70"],
    "Satisfaction_Score": [4.2, 3.8, 4.5, 4.0, 3.9, 4.1, 3.7, 4.3],
}
df_health = pd.DataFrame(data_health)

# Sample data for Stock Market
data_stock = {
    "Month": ["Jan", "Feb", "Mar", "Apr", "May", "June", "July", "Aug", "Sep", "Oct", "Nov", "Dec"],
    "Revenue": [1000, 1500, 2000, 2500, 3000, 3500, 4000, 4500, 5000, 5500, 6000, 6500],
    "Expenses": [700, 800, 1200, 1500, 1800, 600, 900, 1700, 1900, 2100, 2000, 2500],
}
df_stock = pd.DataFrame(data_stock)

# Sample data for Business KPI
df_business = pd.DataFrame(data_stock)

# Line Chart for Patient Trends Over Days
line_data = {
    "Day": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"],
    "CMH FSD": [1000, 1200, 1400, 1600, 1800],
    "CMH SLK": [800, 1000, 1200, 1500, 1700],
    "CMH LHR": [600, 800, 1000, 1300, 1600],
}
line_df = pd.DataFrame(line_data)

line_fig = px.line(
    line_df.melt(id_vars=["Day"], var_name="Hospital", value_name="Patients"),
    x="Day",
    y="Patients",
    color="Hospital",
    title="Patient Trends Over Days"
)

# Pie Chart for Satisfaction Score Distribution
pie_chart = px.pie(
    df_health,
    names="Hospital",
    values="Satisfaction_Score",
    title="Satisfaction Score Distribution"
)

# Heatmap for Healthcare
heatmap = px.imshow(
    [
        [1000, 2000, 1500, 1200, 2000],
        [3000, 2500, 4000, 3100, 1600],
        [3500, 4500, 3000, 2800, 1900],
        [2000, 2200, 2100, 3300, 1800],
        [3000, 1200, 2600, 3900, 1100],
    ],
    labels={"x": "Day", "y": "Hospital", "color": "Patients"},
    x=["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"],
    y=["CMH FSD", "CMH SLK", "CMH ISB", "CMH LHR", "CMH MUL"],
    title="Patient Distribution Heatmap"
)

# Bar Chart for Healthcare
bar_chart_health = px.bar(
    df_health,
    x="Hospital",
    y="Patients",
    color="Age_Group",
    title="Patient Demographics"
)

# Scatter Plot for Healthcare Analytics
scatter_plot_health = px.scatter(
    df_health,
    x="Patients",
    y="Age_Group",
    size="Satisfaction_Score",
    color="Hospital",
    title="Patient Count by Age Group and Satisfaction",
    labels={"x": "Number of Patients", "y": "Age Group"}
)

# Line Chart for Business KPI
line_chart_business = px.line(
    df_business,
    x="Month",
    y="Revenue",
    title="Revenue Trend"
)

# Pie Chart for Business KPI
pie_chart_business = px.pie(
    df_business,
    values="Expenses",
    names="Month",
    title="Expense Breakdown",
    color_discrete_sequence=px.colors.sequential.RdBu,
    hole=0.3
)
pie_chart_business.update_traces(
    pull=[0.2 if month == "Dec" else 0 for month in df_business["Month"]]
)

# Line Chart for Stock Data
line_chart_stock = px.line(
    df_stock,
    x="Month",
    y="Revenue",
    title="Stock Revenue Trend"
)

# Pie Chart for Stock Data
pie_chart_stock = px.pie(
    df_stock,
    values="Expenses",
    names="Month",
    title="Stock Expense Breakdown",
    color_discrete_sequence=px.colors.sequential.Plasma
)
pie_chart_stock.update_traces(
    pull=[0.1 if month == "Oct" else 0 for month in df_stock["Month"]]
)

# Initialize Dash app
app = dash.Dash(__name__)

app.layout = html.Div([

    # Bold Heading at the Top
    html.H1("Integrated Analytics Dashboard", style={"textAlign": "center", "fontWeight": "bold"}),

    # Healthcare Analytics Section
    html.H2("Healthcare Analytics"),
    html.Div([
        html.Div([dcc.Graph(figure=heatmap)], style={"width": "50%", "display": "inline-block"}),
        html.Div([dcc.Graph(figure=bar_chart_health)], style={"width": "50%", "display": "inline-block"}),
    ], style={"marginBottom": "30px"}),

    html.Div([dcc.Graph(figure=scatter_plot_health)], style={"marginBottom": "30px"}),

    html.Div([
        html.Div([dcc.Graph(figure=line_fig)], style={"width": "50%", "display": "inline-block"}),
        html.Div([dcc.Graph(figure=pie_chart)], style={"width": "50%", "display": "inline-block"}),
    ], style={"marginBottom": "30px"}),

    # Business Key Performance Indicators (KPIs) Section
    html.H2("Business Key Performance Indicators (KPIs)"),
    html.Div([
        html.Div([dcc.Graph(figure=line_chart_business)], style={"width": "50%", "display": "inline-block"}),
        html.Div([dcc.Graph(figure=pie_chart_business)], style={"width": "50%", "display": "inline-block"}),
    ], style={"marginBottom": "30px"}),

    # Stock Market Analytics Section
    html.H2("Stock Market Analytics"),
    html.Div([
        html.Div([dcc.Graph(figure=line_chart_stock)], style={"width": "50%", "display": "inline-block"}),
        html.Div([dcc.Graph(figure=pie_chart_stock)], style={"width": "50%", "display": "inline-block"}),
    ], style={"marginBottom": "30px"})
])

if __name__ == "__main__":
    app.run_server(debug=True)